package net.meisen.dissertation.jdbc;

import java.io.InputStream;
import java.io.Reader;
import java.math.BigDecimal;
import java.net.URL;
import java.sql.Array;
import java.sql.Blob;
import java.sql.Clob;
import java.sql.Connection;
import java.sql.Date;
import java.sql.NClob;
import java.sql.ParameterMetaData;
import java.sql.PreparedStatement;
import java.sql.Ref;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.RowId;
import java.sql.SQLException;
import java.sql.SQLWarning;
import java.sql.SQLXML;
import java.sql.Statement;
import java.sql.Time;
import java.sql.Timestamp;
import java.util.Calendar;

public class TidaStatement extends BaseConnectionWrapper implements Statement,
		PreparedStatement {

	private final String sql;

	private final int resultSetType;
	private final int resultSetConcurrency;
	private final int resultSetHoldability;

	private TidaResultSet currentResultSet = null;

	public TidaStatement(final TidaConnection connection, final String sql,
			final int resultSetType, final int resultSetConcurrency,
			final int resultSetHoldability, final int autoGeneratedKeys)
			throws SQLException {
		this(connection, sql, resultSetType, resultSetConcurrency,
				resultSetHoldability);
	}

	public TidaStatement(final TidaConnection connection, final String sql,
			final int resultSetType, final int resultSetConcurrency,
			final int resultSetHoldability, final int[] columnIndexes)
			throws SQLException {
		this(connection, sql, resultSetType, resultSetConcurrency,
				resultSetHoldability);
	}

	public TidaStatement(final TidaConnection connection, final String sql,
			final int resultSetType, final int resultSetConcurrency,
			final int resultSetHoldability, final String[] columnNames)
			throws SQLException {
		this(connection, sql, resultSetType, resultSetConcurrency,
				resultSetHoldability);
	}

	public TidaStatement(final TidaConnection connection, final String sql,
			final int resultSetType, final int resultSetConcurrency,
			final int resultSetHoldability) throws SQLException {
		super(connection);

		this.resultSetType = resultSetType;
		this.resultSetConcurrency = resultSetConcurrency;
		this.resultSetHoldability = resultSetHoldability;

		this.sql = sql;
	}

	@Override
	protected BaseConnectionWrapper getProtocolScope() {
		return this;
	}

	@Override
	protected boolean doCloseOnCommit() {
		return false;
	}

	/**
	 * Checks if the connection is closed, if so an exception is thrown,
	 * otherwise nothing happens.
	 * 
	 * @throws SQLException
	 *             if the connection is closed
	 * 
	 * @see #isClosed()
	 */
	protected void checkClosed() throws SQLException {
		if (isClosed()) {
			throw TidaSqlExceptions.createException(3999);
		}
	}

	protected void execute(final String sql, final TidaResultSetType type,
			final int autoGeneratedKeys, final int[] columnIndexes,
			final String[] columnNames) throws SQLException {
		checkClosed();

		if (currentResultSet != null) {
			// TODO whatever
		}

		// TODO Auto-generated method stub
		final String query = sql == null ? this.sql : sql;

		// set the values of the query
		currentResultSet = new TidaResultSet(this, query, type,
				getResultSetType(), getResultSetConcurrency(),
				getResultSetHoldability(), autoGeneratedKeys, columnIndexes,
				columnNames);
	}

	@Override
	public ResultSet executeQuery() throws SQLException {
		return executeQuery(null);
	}

	@Override
	public ResultSet executeQuery(final String sql) throws SQLException {
		return executeQuery(sql, Statement.NO_GENERATED_KEYS, null, null);
	}

	protected TidaResultSet executeQuery(final String sql,
			final int autoGeneratedKeys, final int[] columnIndexes,
			final String[] columnNames) throws SQLException {
		execute(sql, TidaResultSetType.QUERY, Statement.NO_GENERATED_KEYS,
				columnIndexes, columnNames);

		return currentResultSet;
	}

	@Override
	public boolean execute() throws SQLException {
		return execute(null);
	}

	@Override
	public boolean execute(final String sql) throws SQLException {
		return execute(sql, Statement.NO_GENERATED_KEYS, null, null);
	}

	@Override
	public boolean execute(final String sql, final int autoGeneratedKeys)
			throws SQLException {
		return execute(sql, autoGeneratedKeys, null, null);
	}

	@Override
	public boolean execute(final String sql, final int[] columnIndexes)
			throws SQLException {
		return execute(sql, Statement.RETURN_GENERATED_KEYS, columnIndexes,
				null);
	}

	@Override
	public boolean execute(final String sql, final String[] columnNames)
			throws SQLException {
		return execute(sql, Statement.RETURN_GENERATED_KEYS, null, columnNames);
	}

	protected boolean execute(final String sql, final int autoGeneratedKeys,
			final int[] columnIndexes, final String[] columnNames)
			throws SQLException {
		execute(sql, TidaResultSetType.UNKNOWN, autoGeneratedKeys,
				columnIndexes, columnNames);

		return TidaResultSetType.QUERY.equals(currentResultSet
				.getResultSetType());
	}

	@Override
	public int executeUpdate() throws SQLException {
		return executeUpdate(null);
	}

	@Override
	public int executeUpdate(final String sql) throws SQLException {
		return executeUpdate(sql, Statement.NO_GENERATED_KEYS, null, null);
	}

	@Override
	public int executeUpdate(final String sql, final int autoGeneratedKeys)
			throws SQLException {
		return executeUpdate(sql, autoGeneratedKeys, null, null);
	}

	@Override
	public int executeUpdate(final String sql, final int[] columnIndexes)
			throws SQLException {
		return executeUpdate(sql, Statement.RETURN_GENERATED_KEYS,
				columnIndexes, null);
	}

	@Override
	public int executeUpdate(final String sql, final String[] columnNames)
			throws SQLException {
		return executeUpdate(sql, Statement.RETURN_GENERATED_KEYS, null,
				columnNames);
	}

	protected int executeUpdate(final String sql, final int autoGeneratedKeys,
			final int[] columnIndexes, final String[] columnNames)
			throws SQLException {
		execute(sql, TidaResultSetType.MODIFY, autoGeneratedKeys,
				columnIndexes, columnNames);

		// if no generated keys are needed close it
		if (Statement.NO_GENERATED_KEYS == autoGeneratedKeys) {
			currentResultSet.close();
		} else {
			
		}

		return currentResultSet.getCountValue();
	}

	@Override
	public int[] executeBatch() throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int getMaxFieldSize() throws SQLException {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void setMaxFieldSize(final int max) throws SQLException {
		// TODO Auto-generated method stub
	}

	@Override
	public int getMaxRows() throws SQLException {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void setMaxRows(final int max) throws SQLException {
		// TODO Auto-generated method stub
	}

	@Override
	public void setEscapeProcessing(final boolean enable) throws SQLException {
		// TODO Auto-generated method stub
	}

	@Override
	public int getQueryTimeout() throws SQLException {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void setQueryTimeout(final int seconds) throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void cancel() throws SQLException {
		// TODO Auto-generated method stub
	}

	@Override
	public SQLWarning getWarnings() throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void clearWarnings() throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setCursorName(String name) throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public ResultSet getResultSet() throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int getUpdateCount() throws SQLException {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public boolean getMoreResults() throws SQLException {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public void setFetchDirection(int direction) throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public int getFetchDirection() throws SQLException {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void setFetchSize(int rows) throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public int getFetchSize() throws SQLException {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int getResultSetConcurrency() throws SQLException {
		return resultSetConcurrency;
	}

	@Override
	public int getResultSetType() throws SQLException {
		return resultSetType;
	}

	@Override
	public int getResultSetHoldability() throws SQLException {
		return resultSetHoldability;
	}

	@Override
	public void addBatch(final String sql) throws SQLException {
		// TODO Auto-generated method stub
	}

	@Override
	public void clearBatch() throws SQLException {
		// TODO Auto-generated method stub
	}

	@Override
	public Connection getConnection() throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean getMoreResults(final int current) throws SQLException {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public ResultSet getGeneratedKeys() throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void setPoolable(final boolean poolable) throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public boolean isPoolable() throws SQLException {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public void setNull(final int parameterIndex, final int sqlType)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setBoolean(final int parameterIndex, final boolean x)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setByte(final int parameterIndex, final byte x)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setShort(final int parameterIndex, final short x)
			throws SQLException {
		// TODO Auto-generated method stub
	}

	@Override
	public void setInt(final int parameterIndex, final int x)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setLong(final int parameterIndex, final long x)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setFloat(final int parameterIndex, final float x)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setDouble(final int parameterIndex, final double x)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setBigDecimal(final int parameterIndex, final BigDecimal x)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setString(final int parameterIndex, final String x)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setBytes(final int parameterIndex, final byte[] x)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setDate(final int parameterIndex, final Date x)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setTime(final int parameterIndex, final Time x)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setTimestamp(final int parameterIndex, final Timestamp x)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setAsciiStream(final int parameterIndex, final InputStream x,
			final int length) throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setUnicodeStream(final int parameterIndex, final InputStream x,
			final int length) throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setBinaryStream(final int parameterIndex, final InputStream x,
			final int length) throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void clearParameters() throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setObject(final int parameterIndex, final Object x,
			final int targetSqlType) throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setObject(final int parameterIndex, final Object x)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void addBatch() throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setCharacterStream(final int parameterIndex,
			final Reader reader, final int length) throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setRef(final int parameterIndex, final Ref x)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setBlob(int parameterIndex, Blob x) throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setClob(int parameterIndex, Clob x) throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setArray(int parameterIndex, Array x) throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public ResultSetMetaData getMetaData() throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void setDate(int parameterIndex, Date x, Calendar cal)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setTime(int parameterIndex, Time x, Calendar cal)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setTimestamp(int parameterIndex, Timestamp x, Calendar cal)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setNull(int parameterIndex, int sqlType, String typeName)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setURL(int parameterIndex, URL x) throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public ParameterMetaData getParameterMetaData() throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void setRowId(int parameterIndex, RowId x) throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setNString(int parameterIndex, String value)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setNCharacterStream(int parameterIndex, Reader value,
			long length) throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setNClob(int parameterIndex, NClob value) throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setClob(int parameterIndex, Reader reader, long length)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setBlob(int parameterIndex, InputStream inputStream, long length)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setNClob(int parameterIndex, Reader reader, long length)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setSQLXML(int parameterIndex, SQLXML xmlObject)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setObject(int parameterIndex, Object x, int targetSqlType,
			int scaleOrLength) throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setAsciiStream(int parameterIndex, InputStream x, long length)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setBinaryStream(int parameterIndex, InputStream x, long length)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setCharacterStream(int parameterIndex, Reader reader,
			long length) throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setAsciiStream(int parameterIndex, InputStream x)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setBinaryStream(int parameterIndex, InputStream x)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setCharacterStream(int parameterIndex, Reader reader)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setNCharacterStream(int parameterIndex, Reader value)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setClob(int parameterIndex, Reader reader) throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setBlob(int parameterIndex, InputStream inputStream)
			throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setNClob(int parameterIndex, Reader reader) throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public String toString() {
		return "[" + getClass().getSimpleName() + "] " + sql;
	}
}
